@use 'text-box.mixins' as mixin;

$primary: #526ed3;
$accent: #3aa981;
$warn: #dd4c1e;
$warn-secondary: #e38163;
$error: #b33f40;
$inactive: #1b1f3b66;
$default: #1b1f3b;
$bgc: #fff;

$duration: 300ms;
$transition: $duration ease-in-out;
$default-width: 0.625rem;
$infix-padding: 0.75rem;
$opacity: 0.7;

//-0.25rem
// wrapper
.textbox-wrapper {
  display: flex;
  width: inherit;
  height: inherit;
  box-sizing: border-box;
}

.textbox-infix {
  position: relative;
  display: block;
  flex: 1 1 auto;
  width: $default-width;
  border-top: $infix-padding solid transparent;
}

// input
.textbox-input {
  @include mixin.reset-input;

  width: 100%;
  max-width: 100%;
  vertical-align: bottom;
  text-align: inherit;
  box-sizing: content-box;

  // placeholder
  &:not(:focus-within)::placeholder {
    visibility: hidden;
  }

  &:focus-within::placeholder {
    color: $inactive;
  }
}

// label
.textbox-label-wrapper {
  position: absolute;
  top: -$infix-padding;
  left: 0;
  box-sizing: content-box;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  padding-top: $infix-padding;
}

.textbox-label {
  display: block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  pointer-events: none;
  transition: transform $transition, scale $transition, color $transition;
  transform: translate(0, 0) scale(1);
  transform-origin: 0 0;
}

// suffix + prefix
.textbox-prefix,
.textbox-suffix {
  position: relative;
  display: flex;
  pointer-events: none;
  white-space: nowrap;
  flex: none;
  color: currentColor;

  ::ng-deep svg {
    width: 1.25rem;
    height: 1.25rem;
    fill: currentColor;
  }

  .textbox-cleaner::ng-deep svg {
    pointer-events: auto;
    cursor: pointer;
    transition: fill $transition;

    &:hover {
      fill: $default;
    }
  }

  ::ng-deep *[uiPrefix],
  ::ng-deep *[uiSuffix] {
    display: flex;
    align-self: flex-start;
  }
}

// component
:host {
  @include mixin.box-shadow(1);

  position: relative;
  display: inline-block;
  width: 100%;
  height: 100%;
  outline: 0 solid $primary;
  transition: outline-width $transition, box-shadow $transition;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  &[ui-textbox-size='small'] {
    @include mixin.size(small);
    @include mixin.label-float(small);
  }

  &[ui-textbox-size='medium'] {
    @include mixin.size(medium);
    @include mixin.label-float(medium);
  }

  &[ui-textbox-size='large'] {
    @include mixin.size(large);
    @include mixin.label-float(large);
  }

  &:hover {
    @include mixin.box-shadow(2);
  }

  &.--focused {
    @include mixin.host-interactive($primary);
  }

  &.--invalid {
    @include mixin.host-interactive($warn);

    &:focus-within {
      @include mixin.host-interactive($warn-secondary);
    }

    .textbox-label {
      color: $warn !important;
    }
  }

  &.--disabled {
    @include mixin.host-interactive($inactive);

    opacity: $opacity;
  }
}
