@use "sass:map";
@use "sass:math";
@import "text-field.mixins";

$primary: #526ed3;
$accent: #3aa981;
$warn: #dd4c1e;
$warn-secondary: #e38163;
$error: #B33F40;
$inactive: #1B1F3B66;
$default: #1b1f3b;
$bgc: #fff;

$duration: 300ms;
$transition: $duration ease-in-out;
$input: ("small": 0.3rem, "medium": 1.1rem, "large": 1.5rem);
$padding-x-bottom: 1rem .3rem;
$label-padding-top: ("small": 0, "medium": .2rem, "large": .4rem);
$radius: ("small": 0.5rem, "medium": 0.625rem, "large": 0.625rem);

@mixin size($size) {
  $padding-y: map.get($input, $size);

  .tf-input {
    padding: $padding-y $padding-x-bottom;
    border-radius: map.get($radius, $size);
  }

  .tf-label {
    padding: math.div($padding-y, 2) $padding-x-bottom;
  }
}

@mixin label-float($size) {
  &.--filled .tf-label,
  &.--focused .tf-label {
    font-size: small;
    color: $default;
    padding-top: map.get($label-padding-top, $size);
  }

  @if $size == small {
    .tf-label {
      display: none;
    }
    .tf-input::placeholder {
      visibility: visible;
    }
  }
}

@mixin inherit {
  width: inherit;
  height: inherit;
  box-sizing: border-box;
}

// component
:host {
  display: flex;
  -webkit-font-smoothing: antialiased;

  &[ui-text-field-size="small"] {
    @include size(small);
    @include label-float(small);
  }

  &[ui-text-field-size="medium"] {
    @include size(medium);
    @include label-float(medium);
  }

  &[ui-text-field-size="large"] {
    @include size(large);
    @include label-float(large);
  }
}

// wrapper
.tf-wrapper {
  @include inherit;
  display: flex;
  position: relative;
  height: 100%;
  width: 100%;
}

// input
.tf-input {
  border: none;
  outline: 0 solid $primary;

  transition: $transition;

  &:hover {
    @include box-shadow(2);
  }

  &:focus-within {
    outline-width: 2px;
    @include box-shadow(0);
  }

  // placeholder
  &:not(:focus-within)::placeholder {
    visibility: hidden;
  }
  &:focus-within::placeholder {
    color: $inactive;
  }

  @include box-shadow(1);
  @include inherit;
}

// label wrapper + label
.tf-label-wrapper {
  position: absolute;
  left: 0;
  pointer-events: none;
  @include inherit;
}

.tf-label {
  display: block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  transition: $transition;
  @include inherit;
}
