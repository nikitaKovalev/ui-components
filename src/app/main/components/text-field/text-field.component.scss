@use "text-field.mixins" as mixin;

$primary: #526ed3;
$accent: #3aa981;
$warn: #dd4c1e;
$warn-secondary: #e38163;
$error: #B33F40;
$inactive: #1B1F3B66;
$default: #1b1f3b;
$bgc: #fff;

$duration: 300ms;
$transition: $duration ease-in-out;

// component
:host {
  display: flex;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  &[ui-text-field-size="small"] {
    @include mixin.size(small);
    @include mixin.label-float(small);
  }

  &[ui-text-field-size="medium"] {
    @include mixin.size(medium);
    @include mixin.label-float(medium);
  }

  &[ui-text-field-size="large"] {
    @include mixin.size(large);
    @include mixin.label-float(large);
  }

  &.--invalid {
    .tf-input {
      outline-width: 2px;
      outline-color: $warn;
      &:focus-within {
        outline-color: $warn-secondary;
      }
      @include mixin.box-shadow(0);
    }

    .tf-label {
      color: $warn !important;
    }
  }

  &.--disabled {
    opacity: 0.7;

    .tf-input {
      outline-width: 2px;
      outline-color: $inactive;
      @include mixin.box-shadow(0);
    }
  }
}

// wrapper
.tf-wrapper {
  @include mixin.inherit;
  display: flex;
  position: relative;
  height: 100%;
  width: 100%;
}

// input
.tf-input {
  border: none;
  outline: 0 solid $primary;

  transition: $transition;

  &:hover {
    @include mixin.box-shadow(2);
  }

  &:focus-within {
    outline-width: 2px;
    @include mixin.box-shadow(0);
  }

  // placeholder
  &:not(:focus-within)::placeholder {
    visibility: hidden;
  }
  &:focus-within::placeholder {
    color: $inactive;
  }

  @include mixin.box-shadow(1);
  @include mixin.inherit;
}

// label wrapper + label
.tf-label-wrapper {
  position: absolute;
  left: 0;
  pointer-events: none;
  @include mixin.inherit;
}

.tf-label {
  display: block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  transition: $transition;
  @include mixin.inherit;
}
